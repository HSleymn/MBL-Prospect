# Generated by Django 5.2 on 2025-04-15 12:26

import django.contrib.auth.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('idcontact', models.AutoField(db_column='idContact', primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=50, null=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=50, null=True)),
                ('domain', models.CharField(blank=True, max_length=50, null=True)),
                ('street', models.CharField(blank=True, max_length=50, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='postalCode', max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('lastsend', models.DateTimeField(blank=True, db_column='lastSend', null=True)),
                ('phonenum', models.CharField(blank=True, db_column='phoneNum', max_length=12, null=True)),
                ('website', models.CharField(blank=True, max_length=50, null=True)),
                ('businessstatus', models.IntegerField(blank=True, db_column='businessStatus', null=True)),
            ],
            options={
                'db_table': 'Contact',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('iduser', models.AutoField(db_column='idUser', primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=50, null=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('roles', models.JSONField(blank=True, null=True)),
                ('userstatus', models.JSONField(blank=True, db_column='userStatus', null=True)),
                ('tokkengoogle', models.CharField(blank=True, db_column='tokkenGoogle', max_length=255, null=True)),
                ('mailbalance', models.IntegerField(blank=True, db_column='mailBalance', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MailSent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_date', models.DateTimeField(db_column='sendDate')),
                ('opened', models.BooleanField(default=False)),
                ('idcontact', models.ForeignKey(db_column='idContact', on_delete=django.db.models.deletion.CASCADE, related_name='mails_received', to='utilisateurs.contact')),
                ('iduser', models.ForeignKey(db_column='idUser', on_delete=django.db.models.deletion.CASCADE, related_name='mails_sent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'MailSent',
                'managed': True,
                'unique_together': {('iduser', 'idcontact')},
            },
        ),
    ]
